on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check-crossplatform

jobs:
  R-CMD-check:
    runs-on: ubuntu-latest

    name: Check (${{ matrix.config.platform }})

    strategy:
      fail-fast: false
      matrix:
        config:
          -  { platform: linux/386, tag: 386 }
          -  { platform: linux/arm/v5, tag: armel }
          -  { platform: linux/arm/v7, tag: armhf }
          -  { platform: linux/mips64le, tag: mips64le }
          -  { platform: linux/ppc64le, tag: ppc64le }
          -  { platform: linux/riscv64, tag: riscv64 }
          -  { platform: linux/s390x, tag: s390x }
          -  { platform: FreeBSD }

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup QEMU
        if: matrix.config.platform != 'FreeBSD'
        uses: docker/setup-qemu-action@master

      - name: Check with clang-18
        if: matrix.config.platform != 'FreeBSD'
        uses: addnab/docker-run-action@v3
        with:
          image: andrjohns/quickjsr-cross-${{ matrix.config.tag }}
          options: -v ${{ github.workspace }}:/quickjsr --platform=${{ matrix.config.platform }}
          shell: Rscript
          run: |
            setwd("/quickjsr")
            options(crayon.enabled = TRUE)
            cat("LOGNAME=", Sys.info()[["user"]], "\n", sep = "", file = Sys.getenv("GITHUB_ENV"), append = TRUE)
            if (Sys.getenv("_R_CHECK_FORCE_SUGGESTS_", "") == "") Sys.setenv("_R_CHECK_FORCE_SUGGESTS_" = "false")
            if (Sys.getenv("_R_CHECK_CRAN_INCOMING_", "") == "") Sys.setenv("_R_CHECK_CRAN_INCOMING_" = "false")
            cat("check-dir-path=", file.path(getwd(), ("check-clang18")), "\n", file = Sys.getenv("GITHUB_OUTPUT"), sep = "", append = TRUE)
            cat("CC=clang-18", file = "/etc/R/Makeconf", sep = "\n", append = TRUE)
            cat("CXX=clang++-18", file = "/etc/R/Makeconf", sep = "\n", append = TRUE)
            check_results <- rcmdcheck::rcmdcheck(args = c("--as-cran","--no-manual"), build_args = "--no-manual", error_on = "warning", check_dir = "check-clang18")

      - name: Check with gcc-14
        if: matrix.config.platform != 'FreeBSD'
        uses: addnab/docker-run-action@v3
        with:
          image: andrjohns/quickjsr-cross-${{ matrix.config.tag }}
          options: -v ${{ github.workspace }}:/quickjsr --platform=${{ matrix.config.platform }}
          shell: Rscript
          run: |
            setwd("/quickjsr")
            options(crayon.enabled = TRUE)
            cat("LOGNAME=", Sys.info()[["user"]], "\n", sep = "", file = Sys.getenv("GITHUB_ENV"), append = TRUE)
            if (Sys.getenv("_R_CHECK_FORCE_SUGGESTS_", "") == "") Sys.setenv("_R_CHECK_FORCE_SUGGESTS_" = "false")
            if (Sys.getenv("_R_CHECK_CRAN_INCOMING_", "") == "") Sys.setenv("_R_CHECK_CRAN_INCOMING_" = "false")
            cat("check-dir-path=", file.path(getwd(), ("check-gcc14")), "\n", file = Sys.getenv("GITHUB_OUTPUT"), sep = "", append = TRUE)
            cat("CC=clang-18", file = "/etc/R/Makeconf", sep = "\n", append = TRUE)
            cat("CXX=clang++-18", file = "/etc/R/Makeconf", sep = "\n", append = TRUE)
            check_results <- rcmdcheck::rcmdcheck(args = c("--as-cran","--no-manual"), build_args = "--no-manual", error_on = "warning", check_dir = "check-gcc14")

      - name: Test in FreeBSD
        if: matrix.config.platform == 'FreeBSD'
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          prepare: |
            pkg install -y R

          run: |
            Rscript -e 'install.packages("tinytest", repos="https://cloud.r-project.org")'
            R CMD build --no-build-vignettes /root/work/QuickJSR/QuickJSR
            _R_CHECK_FORCE_SUGGESTS_="false" R CMD check --as-cran --no-manual --no-vignettes /root/work/QuickJSR/QuickJSR/QuickJSR_*.tar.gz
